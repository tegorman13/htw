---
title: "E1 Testing - Bayesian Mixed Models"
subtitle: "Fitting mixed effects models"
date: last-modified
categories: [Analysis, R, Bayesian]
code-fold: true
---



```{r}
pacman::p_load(tidyverse,tidybayes,brms,bayesplot,broom,broom.mixed,lme4,emmeans,here,knitr,kableExtra,gt,gghalves,patchwork,ggforce,ggdist)
e1 <- readRDS(here("data/e1_08-04-23.rds"))
source(here("Functions/Display_Functions.R"))
source(here("Functions/org_functions.R"))
test <- e1 |> 
  filter(expMode2 == "Test") |> 
  group_by(vb) |> 
  mutate(distS = as.numeric(scale(dist, scale = FALSE)), 
         distS2 = custom_scale(dist))

options(brms.backend="cmdstanr",mc.cores=4)

```


## Fixed Effects Only
```{r}




modelName <- "e1_testDist"
e1_testDist <- brm(dist ~ condit,data=test,file=paste0(here::here("data/model_cache",modelName)))
brms_eq_tidy <-tidyMCMC(e1_testDist, conf.int = TRUE, conf.level = 0.95,
           estimate.method = "median", conf.method = "HPDinterval")


modelName <- "e1_testDist0"
e1_testDist0 <- brm(dist ~ 0+condit,data=test,file=paste0(here::here("data/model_cache",modelName)))
brms_eq_tidy <-tidyMCMC(e1_testDist0, conf.int = TRUE, conf.level = 0.95,
           estimate.method = "median", conf.method = "HPDinterval")


modelName <- "e1_testDist_uneq"
e1_testDist_uneq <- brm(bf(dist ~ condit,sigma~condit),data=test,file=paste0(here::here("data/model_cache",modelName)))
brms_eq_tidy_uneq <-tidyMCMC(e1_testDist_uneq, conf.int = TRUE, conf.level = 0.95,
           estimate.method = "median", conf.method = "HPDinterval")
brms_eq_tidy_uneq %>%
  mutate_at(vars(estimate, std.error, conf.low, conf.high),
            funs(ifelse(str_detect(term, "sigma"), exp(.), .)))



modelName <- "e1_testDist_uneq_robust"
brms_uneq_robust <- brm(
  bf(dist ~ condit, sigma ~ condit), data=test,
  family = student,file=paste0(here::here("data/model_cache",modelName)))

brms_uneq_robust_tidy <- tidyMCMC(brms_uneq_robust, conf.int = TRUE, conf.level = 0.95,estimate.method = "median", conf.method = "HPDinterval") %>% mutate_at(vars(estimate, std.error, conf.low, conf.high),
            funs(ifelse(str_detect(term, "sigma"), exp(.), .)))
brms_uneq_robust_tidy



brm(dist ~ (0+vb)+(1+condit),data=test)


bayes_R2(e1_testDist)
sjPlot::tab_model(e1_testDist)

```

## Random Effects
```{r}

modelName <- "e1_testDistRF"
e1_testDistRF <- brm(dist ~ condit + vb + (1 + vb|id),data=test,file=paste0(here::here("data/model_cache",modelName)))
brms_eq_tidy <-tidyMCMC(e1_testDistRF, conf.int = TRUE, conf.level = 0.95,
           estimate.method = "median", conf.method = "HPDinterval")

bayes_R2(e1_testDistRF)
sjPlot::tab_model(e1_testDistRF)






```



## Random Effects - Interaction condit x vb
```{r}

modelName <- "e1_testDistRF2"
e1_testDistRF2 <- brm(dist ~ condit * vb + (1 + vb|id),data=test,file=paste0(here::here("data/model_cache",modelName)))
brms_eq_tidy <-tidyMCMC(e1_testDistRF2, conf.int = TRUE, conf.level = 0.95,
           estimate.method = "median", conf.method = "HPDinterval")

bayes_R2(e1_testDistRF2)
sjPlot::tab_model(e1_testDistRF2)


fixef(e1_testDistRF2)
newdat <-data.frame(crossing(condit=c("Constant","Varied"), vb = unique(test$vb)))
preds <- fitted(e1_testDistRF2, re_formula = NA, newdata = newdat, probs = c(0.025, 0.975))


#shinystan::launch_shinystan(e1_testDistRF2)

```

## 0 intercept;  Random Effects - Interaction condit x vb
```{r}

modelName <- "e1_testDistRF2_0"
e1_testDistRF2_0 <- brm(dist ~ 0 + (condit * vb) + (0 + vb|id),data=test,file=paste0(here::here("data/model_cache",modelName)), 
                        iter=1000,chains=2)
brms_eq_tidy <-tidyMCMC(e1_testDistRF2_0, conf.int = TRUE, conf.level = 0.95,
           estimate.method = "median", conf.method = "HPDinterval")

bayes_R2(e1_testDistRF2_0)
sjPlot::tab_model(e1_testDistRF2_0)


fixef(e1_testDistRF2_0)
newdat <-data.frame(crossing(condit=c("Constant","Varied"), vb = unique(test$vb)))
preds <- fitted(e1_testDistRF2_0, re_formula = NA, newdata = newdat, probs = c(0.025, 0.975))


shinystan::launch_shinystan(e1_testDistRF2_0)

```


## 0 intercept;  Random Effects - Interaction condit x vb
```{r}

modelName <- "e1_testDistRF2_02"
e1_testDistRF2_02 <- brm(dist ~ 0 + condit:vb + (0 + vb|id),data=test,file=paste0(here::here("data/model_cache",modelName)))
brms_eq_tidy <-tidyMCMC(e1_testDistRF2_02, conf.int = TRUE, conf.level = 0.95,
           estimate.method = "median", conf.method = "HPDinterval")

bayes_R2(e1_testDistRF2_02)
sjPlot::tab_model(e1_testDistRF2_02)


fixef(e1_testDistRF2_02)
newdat <-data.frame(crossing(condit=c("Constant","Varied"), vb = unique(test$vb)))
preds <- fitted(e1_testDistRF2_02, re_formula = NA, newdata = newdat, probs = c(0.025, 0.975))


shinystan::launch_shinystan(e1_testDistRF2_02)






```





```{r}

modelName <- "e1_test_Dist_Int"
e1_testDist_Int <- brm(dist ~ 0 + Intercept + bandInt + condit + (1|id), 
                       data=test,
                       iter=1000, chains=4, silent=0,
                       file=paste0(here::here("data/model_cache",modelName)))

e1_testDist_Int

pp_check(e1_testDist_Int,group="bandInt")
bayesplot::ppc_dens_overlay_grouped(test$dist,yrep=posterior_predict(e1_testDist_Int,ndraws=100),group=test$bandInt)
pp_check(e1_testDist_Int,type="stat_grouped",ndraws=500, group="bandInt",stat="mean")
coef(e1_testDist_Int)$id

```


```{r}

modelName <- "e1Test_conditBand_RS1"
e1Test_conditBand_RS1 <- brm(dist ~ 1 + bandInt + condit + (1+ bandInt|id), 
                       data=test,
                       iter=1000, chains=4, silent=0,
                       file=paste0(here::here("data/model_cache",modelName)))

e1Test_conditBand_RS1
fixef(e1Test_conditBand_RS1)

pp_check(e1Test_conditBand_RS1,group="bandInt")
bayesplot::ppc_dens_overlay_grouped(test$dist,yrep=posterior_predict(e1Test_conditBand_RS1,ndraws=100),group=test$bandInt)
pp_check(e1Test_conditBand_RS1,type="stat_grouped",ndraws=500, group="bandInt",stat="mean")
coef(e1Test_conditBand_RS1)$id



e1Test_conditBand_RS1 |> 
  tidy_draws() |> 
  select(starts_with("b_"),.chain,.iteration,.draw) 
  
  
  
e1Test_conditBand_RS1 |> 
  spread_draws() 

```


```{r}

modelName <- "e1Test_conditVb_RS1"
e1Test_conditVb_RS1 <- brm(dist ~ 1 + vb + condit + (1+ vb|id), 
                       data=test,
                       iter=1000, chains=4, silent=0,
                       file=paste0(here::here("data/model_cache",modelName)))

e1Test_conditVb_RS1

pp_check(e1Test_conditVb_RS1,group="bandInt")
bayesplot::ppc_dens_overlay_grouped(test$dist,yrep=posterior_predict(e1Test_conditVb_RS1,ndraws=100),group=test$bandInt)
pp_check(e1Test_conditVb_RS1,type="stat_grouped",ndraws=500, group="vb",stat="mean")
coef(e1Test_conditVb_RS1)$id

```

```{r}




```

```{r}

```



```{r}




```


