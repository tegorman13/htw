---
title: "HTW E1 Testing"
categories: [Analysis, R, Bayesian]
---

## Analyses Strategy

To assess differences between groups, we used Bayesian Mixed Effects Regression. Model fitting was performed with the brms package in R @burknerBrmsPackageBayesian2017, and descriptive stats and tables were extracted with the BayestestR package @makowskiBayestestRDescribingEffects2019a. Mixed effects regression enables us to take advantage of partial pooling, simultaneously estimating parameters at the individual and group level. Our use of Bayesian, rather than frequentist methods allows us to directly quantify the uncertainty in our parameter estimates, as well as circumventing convergence issues common to the frequentist analogues of our mixed models. For each model, we report the median values of the posterior distribution, and 95% credible intervals. 

Unless otherwise stated, we ran each model with 4 chains, 5000 iterations per chain, the first 2500 of which were discarded as warmup chains. Rhat values were generally within an acceptable range, with values <=1.02 (see appendix for diagnostic plots). We used uninformative priors for the fixed effects of the model (condition and velocity band), and weakly informative Student T distributions for for the random effects. 

We compared varied and constant performance across two measures, deviation and discrimination. Deviation was quantified as the absolute deviation from the nearest boundary of the velocity band, or set to 0 if the throw velocity fell anywhere inside the target band. Thus, when the target band was 600-800, throws of 400, 650, and 1100 would result in deviation values of 200, 0, and 300, respectively. Discrimination was measured by fitting a linear model to the testing throws of each subjects, with the lower end of the target velocity band as the predicted variable, and the x velocity produced by the participants as the predictor variable. Participants who reliably discriminated between velocity bands tended to have positive slopes with values ~1, while participants who made throws irrespective of the current target band would have slopes ~0.  


## Results

### Testing Phase - No feedback. 

In the first part of the testing phase, participants are tested from each of the velocity bands, and receive no feedback after each throw. 

```{r setup, include=FALSE}
source(here::here("Functions", "packages.R"))
test <- readRDS(here("data/e1_08-04-23.rds")) |> 
  filter(expMode2 == "Test") 
options(brms.backend="cmdstanr",mc.cores=4)

e1Sbjs <- test |> group_by(id,condit) |> summarise(n=n())

```



#### Deviation From Target Band

See @tbl-e1-test-nf-deviation for descriptive statistics of the raw empirical data, and @fig-e1-test-vx for a visual representation of the full distributions.  
To assess differences in accuracy between groups, we used Bayesian mixed effects regression models implemented via brms in R. The primary model predicted the absolute deviation from the target velocity band (dist) as a function of training condition (condit), target velocity band (vb), and their interaction, with random intercepts and slopes for each participant (id). 





```{r}
#| label: tbl-e1-test-nf-deviation
#| tbl-cap: "Testing Deviation - Empirical Summary"
#| tbl-subcap: ["Constant Testing - Deviation", "Varied Testing - Deviation"]
#| layout-ncol: 2
#| echo: fenced

result <- test_summary_table(test, "dist", mfun = list(mean = mean, median = median, sd = sd))
result$constant
result$varied

```


```{r}
#| label: tbl-e1-bmm-dist
#| tbl-cap: "Experiment 1. Bayesian Mixed Model predicting absolute deviation as a function of condition (Constant vs. Varied) and Velocity Band"
#contrasts(test$condit) 

# contrasts(test$vb)

modelName <- "e1_testDistBand_RF_5K_Ml1"
e1_distBMM <- brm(dist ~ condit * bandInt + (1 + bandInt|id),
                      data=test,file=paste0(here::here("data/model_cache",modelName)),
                      iter=5000,chains=4)
mp1 <- GetModelStats(e1_distBMM) |> kable(escape=F,booktabs=T)
mp1
```

Experiment 1. Bayesian Mixed Model Predicting Vx as a function of condition (Constant vs.Varied) and Velocity Band

| Term              | Estimate | Est.Error | 95% CrI Lower | 95% CrI Upper | pd   | Rhat | ESS    |
|-------------------|----------|-----------|---------------|---------------|------|------|--------|
| Intercept         | 226.03   | 32.32     | 162.33        | 287.60        | 1.00 | 1.01 | 414.11 |
| conditVaried      | 135.16   | 47.79     | 43.63         | 231.74        | 1.00 | 1.01 | 430.61 |
| Band              | -0.02    | 0.03      | -0.09         | 0.04          | 0.74 | 1.01 | 505.15 |
| conditVaried:Band | -0.13    | 0.05      | -0.23         | -0.03         | 1.00 | 1.01 | 532.83 |


```{r}
#| label: fig-e1-bmm-dist
#| fig-cap: E1. Conditioinal Effect of Training Condition and Band. Ribbon indicated 95% Credible Intervals. 


e1_distBMM |> emmeans( ~condit + bandInt, 
                       at = list(bandInt = c(100, 350, 600, 800, 1000, 1200))) |>
  gather_emmeans_draws() |>
  ggplot(aes(x = bandInt, y = .value, color = condit, fill = condit)) + 
  stat_dist_pointinterval() +
  stat_lineribbon(alpha = .25, size = 1, .width = c(.95)) +
    ylab("Predicted Deviation") + xlab("Velocity Band")+
  scale_x_continuous(breaks = c(100, 350, 600, 800, 1000, 1200), 
                     labels = levels(test$vb), 
                     limits = c(0, 1400)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) 


 

```


```{r}
#| label: fig-e1-ame
#| fig-cap: E1. Predicted Means Per Condition and Band, and Average Marginal Effect (Constant - Varied)
#| fig-width: 10
#| fig-height: 10
new_data_grid=map_dfr(1, ~data.frame(unique(test[,c("id","condit","bandInt")])))

cSamp <- e1_distBMM |> 
  emmeans("condit",by="bandInt",at=list(bandInt=c(100,350,600,800,1000,1200)),epred = TRUE) |> 
  pairs() |> gather_emmeans_draws()  |>
  group_by(contrast, .draw,bandInt) |> summarise(value=mean(.value), n=n())

 ameBand <- cSamp |> ggplot(aes(x=value,y="")) + 
  stat_halfeye() + 
  geom_vline(xintercept=0,alpha=.4)+
  facet_wrap(~bandInt,ncol=1) + labs(x="Marginal Effect (Constant - Varied)", y= NULL)+
  ggtitle("Average Marginal Effect")

bothConditGM <- e1_distBMM %>%
  epred_draws(newdata = new_data_grid,ndraws = 2000, re_formula = NA) |>
  ggplot(aes(x=.epred,y="Mean",fill=condit)) + 
  stat_halfeye() +facet_wrap(~bandInt, ncol = 1) +
  labs(x="Predicted Deviation", y=NULL)+
  ggtitle("Grand Means") +theme(legend.position = "bottom")

(bothConditGM | ameBand) + plot_layout(widths=c(2,1.0))
```





The model predicting absolute deviation (dist) showed clear effects of both training condition and target velocity band (Table X). Overall, the varied training group showed a larger deviation relative to the constant training group (β = 135, 95% CI [43, 231]). Deviation also depended on target velocity band, with lower bands showing less deviation. See @tbl-e1-bmm-dist for full model output. 



#### Discrimination between Velocity Bands

table below


```{r}
#| label: fig-e1-test-vx
#| fig-cap: E1 testing x velocities. Translucent bands with dash lines indicate the correct range for each velocity band. 
#| fig-width: 11
#| fig-height: 9
test %>% group_by(id,vb,condit) |> plot_distByCondit()

```


```{r}
#| label: tbl-e1-test-nf-vx
#| tbl-cap: "Testing vx - Empirical Summary"
#| tbl-subcap: ["Constant Testing - vx", "Varied Testing - vx"]
#| layout-ncol: 2
#| echo: fenced

result <- test_summary_table(test, "vx", mfun = list(mean = mean, median = median, sd = sd))
result$constant 
result$varied 

```


In addition to accuracy/deviation. We also assessed the ability of participants to reliably discriminate between the velocity bands (i.e. responding differently when prompted for band 600-800 than when prompted for band 150-350). @tbl-e1-test-nf-vx shows descriptive statistics of this measure, and Figure 1 visualizes the full distributions of throws for each combination of condition and velocity band. To quantify discrimination, we again fit Bayesian Mixed Models as above, but this time the dependent variable was the raw x velocity generated by participants. 

```{r}
#| label: tbl-e1-bmm-vx
#| tbl-cap: "Experiment 1. Bayesian Mixed Model Predicting Vx as a function of condition (Constant vs. Varied) and Velocity Band"
e1_vxBMM <- brm(vx ~ condit * bandInt + (1 + bandInt|id),
                        data=test,file=paste0(here::here("data/model_cache", "e1_testVxBand_RF_5k_Ml1")),
                        iter=5000,chains=4,silent=0,
                        control=list(adapt_delta=0.94, max_treedepth=13))
mt2 <-GetModelStats(e1_vxBMM ) |> kable(escape=F,booktabs=T)
mt2
```

See @tbl-e1-bmm-vx for the full model results. The estimated coefficient for training condition (β = 146, 95% CI [35.96, 254.70]) suggests that the varied group tends to produce harder throws than the constant group. More relevant to the issue of discrimination is the slope on Velocity Band (β = 0.69, 95% CI [.59, .77]). Although the median slope does fall underneath the ideal of value of 1, the fact that the 95% credible interval does not contain 0 provides strong evidence that participants exhibted some discrimination between bands. The slope coefficient (β = 0.69 ) also seems in accordance with an examination of @tbl-e1-test-nf-vx, which shows that average x-velocity fell within the range of the target band for four out of six of the bands ($4/6$=.67). 

```{r}
#| label: fig-e1-bmm-vx
#| fig-cap: Conditional effect of training condition and Band. Ribbons indicate 95% HDI. 
#conditional_effects(e1_vxBMM,effects = "bandInt:condit") 


e1_vxBMM |> emmeans( ~condit +bandInt, 
                       at=list(bandInt=c(100,350,600,800,1000,1200) )) |>
  gather_emmeans_draws() |>
  ggplot(aes(x=bandInt,y=.value,color=condit)) + 
  stat_lineribbon(aes(color=condit,fill=condit),alpha=.45,size=1,.width=c(.95)) + 
  ylab("Predicted Vx") + xlab("Velocity Band")


e1_vxBMM |> emmeans( ~condit + bandInt, 
                       at = list(bandInt = c(100, 350, 600, 800, 1000, 1200))) |>
  gather_emmeans_draws() |>
  ggplot(aes(x = bandInt, y = .value, color = condit, fill = condit)) + 
  stat_dist_pointinterval() +
  stat_lineribbon(alpha = .25, size = 1, .width = c(.95)) +
  ylab("Predicted X Velocity") + xlab("Band")+
  scale_x_continuous(breaks = c(100, 350, 600, 800, 1000, 1200), 
                     labels = levels(test$vb), 
                     limits = c(0, 1400)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) 







  
```




```{r}
#| eval: false
indv_coefs <- coef(e1_vxBMM)$id |> 
  as_tibble(rownames="id") |> 
  select(id, starts_with("Est")) |>
  left_join(e1Sbjs, by=join_by(id) ) |> 
  # rank by Estimate.bandInt - within condit, higher is better
  group_by(condit) |> 
  mutate(rank = rank(desc(Estimate.bandInt))) 

top_indv_coefs <- indv_coefs %>%
  filter(rank <= 1)

# Extract ids for top 10 subjects
top_ids <- top_indv_coefs$id
new_data=map_dfr(1, ~data.frame(unique(test[,c("id","condit","bandInt")]))) |> dplyr::arrange(id,bandInt) %>% filter(id %in% top_ids)
new_data$p <- predict(e1_vxBMM, newdata = new_data)

predictions <- t(posterior_predict(e1_vxBMM, newdata = new_data,ndraws=10))
new_data$prediction <- rowMeans(predictions)


# Generate predicted values
preds <- e1_vxBMM %>%
  epred_draws(newdata = new_data) %>%
  as_tibble() %>%
  left_join(newdata, by = "id")

# Plot
ggplot(preds, aes(x = bandInt, y = .epred, group = id, color = id)) +
  stat_lineribbon(alpha = 0.5) +
  labs(title = "Top 10 High Estimate.bandInt",
       x = "BandInt", y = "Predicted vx") +
  theme_minimal() +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))









```





```


NEEDS TO BE WRITTEN


#### E1 Results Discussion



```{r}
#| label: Band Deviation
#| tbl-cap: "Deviations from target"
#| layout: [[70, 30],[-5]]



```






## Misc 

{{< include "../Misc/alm_table.qmd" >}}







Here is a footnote reference,[^1] and another.[^2]

[^1]: Here is the footnote.
[^2]: Here's one with multiple blocks. Subsequent paragraphs are
    indented to show that they belong to the previous footnote.
    ```         
    { some.code }
    ```
Here is an inline note.[^3]

[^3]: Inlines notes are easier to write, since you don't have to pick an
    identifier and move down to type the note.


## References

::: {#refs}
:::
